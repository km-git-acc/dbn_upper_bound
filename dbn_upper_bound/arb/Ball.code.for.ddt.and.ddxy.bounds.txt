#Created by Rudolph - https://github.com/rudolph-git-acc

from mpmath import *\
mp.dps=80\
bpi  = R(mp.pi());\
\
R = RealBallField(90); Z = ComplexBallField(90);\
\
n0=R(0); n1=R(1); nm1=R(-1); n2=R(2); n3=R(3); n4=R(4); n6=R(6); n8=R(8); n0d02=R(2/100)\
\
def xN(N,t):\
    res  = n4*bpi*N^n2-bpi*t/n4;\
    return (res)\
\
def modgam(x,y,t):\
    res  = (n0d02*y).exp()*(x/(n4*bpi))^(-y/n2);\
    return (res)\
\
def bt(n,t):\
    res  =(t/n4*(n.log())^n2).exp();\
    return (res)\
           \
def Ress(x,y,t):\
    res  =(n1+y)/n2+t/n4*(x/(n4*bpi)).log() -((max(n0,n1-n3*y+n4*y*(n1+y)/(x^n2)))*t)/(n2*x^n2);\
    return (res)\
\
def kappa(x,y,t):\
    res  = t*y/(n2*(x-n6));\
    return (res)\
\
def ddxybound(N,y,t):\
    x=xN(N,t); suma=n0; sumb=n0; n=n1;\
    while  n <= N:\
        expo = n^Ress(x,y,t);\
        nlog= n.log() \
        sumb = sumb + bt(n,t)/expo*(nlog/n2 +t*nlog/(n4*(x-n6)));\
        suma = suma + bt(n,t)*n^y/expo*(t*nlog/(n4*(x-n6))+((abs(Z(n1+y,x))/(n4*bpi)).log()+bpi+n3/x)*(n1/n2+t/(n4*(x-n6))))\
        n = n + n1;\
    res = sumb+abs(modgam(x,y,t))*N^(abs(kappa(x,y,t)))*suma\
    return (res)\
\
def ddtbound(N,y,t):\
    x=xN(N,t); suma=n0; sumb=n0; n=n1;\
    while  n <= N:\
        expo = n^Ress(x,y,t);\
        nlog= n.log() \
        sumb = sumb + bt(n,t)/expo*(n1/n4*nlog*(x/(n4*bpi*n)).log() +bpi/n8*nlog+n2*nlog/(x-n6));\
        suma = suma + bt(n,t)*n^y/expo*(n1/n4*nlog*(x/(n4*bpi*n)).log() + bpi/n8*nlog + n1/n4*(bpi/n2+n8/(x-n6))*((x/(n4*bpi)).log()+n8/(x-n6)))\
        n = n + n1;\
    res = sumb+abs(modgam(x,y,t))*N^(abs(kappa(x,y,t)))*suma;\
    return (res)\
\
bbt=R(2/10)\
bby=R(2/10)\
bbn=R(69098)\
\
print(CIF(ddxybound(bbN,bby,bbt)))\
print(CIF(ddtbound(bbN,bby,bbt)))}
