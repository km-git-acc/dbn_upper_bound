#Created by Rudolph - https://github.com/rudolph-git-acc

from mpmath import *\
mp.dps=50\
\
R = RealBallField(180); R\
Z = ComplexBallField(180); Z\
\
def alpha1(bs):\
    res = R(1)/(R(2)*bs)+R(1)/(bs-R(1))+(R(1)/R(2))*(bs/(R(2)*R(mp.pi))).log()\
    return (res)\
\
def C0(p):\
    res  = ((R(mp.pi)*Z(0,1)*(p^R(2)/R(2)+R(3)/R(8))).exp()-Z(0,1)*R(2).sqrt()*(R(mp.pi)*p/R(2)).cos())/(R(2)*(R(mp.pi)*p).cos())\
    return (res)\
\
def H01(bs):\
    res  = bs/R(2)*(bs-R(1))*R(mp.pi)^(-bs/R(2))*(R(2)*R(mp.pi)).sqrt()*((bs/R(2)-R(1)/R(2))*(bs/R(2)).log()-bs/R(2)).exp()\
    return (res)\
\
def abceff(bx,by,bt):\
    bI = Z(0,1)  \
    bs   = Z((R(1)-by)/R(2),bx/R(2));\
    Tval = bx/R(2); Tdash = Tval + R(pi)*bt/R(8);\
    a=(Tdash/(R(2)*R(pi))).sqrt(); N=(a).floor(); p = R(1) - R(2)*(a-N);\
    U = (-bI*((Tdash/R(2))*(Tdash/(R(2)*R(mp.pi))).log() - Tdash/R(2) - R(mp.pi)/R(8))).exp()\
    sig1 = (R(1)-by)/R(2); s1 = sig1 + bI*Tval; sdash = sig1 + bI*Tdash;\
    alph1 = alpha1(s1); alph2 = alpha1(R(1)-s1);\
    termC1 = R(mp.pi)^(-sdash/R(2))*(sdash/R(2)).gamma()*(a^(-sig1))*C0(p)*U;\
    termC2 = R(mp.pi)^(-(R(1)-sdash)/R(2))*((R(1)-sdash)/R(2)).gamma()*(a^(-(R(1)-sig1)))*(C0(p)).conjugate()*(U).conjugate();\
    A0 = (R(1)/R(8))*((bt/R(4))*alph1^R(2)).exp()*H01(s1)\
    B0 = (R(1)/R(8))*((bt/R(4))*alph2^R(2)).exp()*H01(R(1)-s1)\
    n=R(1); A=C1(0,0); B=A; btd2 =bt/R(2)\
    while n <= N:\
        term = (bt/R(4))*(R(n)).log()\
        A = A+R(n)^(term - btd2*alph1 - s1);\
        B = B+R(n)^(term - btd2*alph2 - (R(1)-s1));\
        n = n+R(1);\
    A=A0*A; B=B0*B\
    C = (R(1)/R(8))*(bt*R(mp.pi)^R(2)/R(64)).exp()*(sdash*(sdash-R(1))/R(2))*((R(-1))^N)*(termC1 + termC2);\
    return (A+B-C)\
\
print(n(abceff(R(10^6),R(4/10),R(3/10)),132))}
